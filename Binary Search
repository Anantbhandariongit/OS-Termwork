#include<iostream>
using namespace std;

//iterative Binary Search

int itr_bin_srch(int arr[], int key, int mid, int low, int high)
{
    while(low<high)
    {
        mid = (low+high)/2;
        if(arr[mid]==key)
            return mid;
        else if(key>arr[mid])
            low=mid + 1;
        else
            high = mid-1;
    }
    return -1;
}

//Recursive Binary Search

int rec_bin_srch(int arr[], int key, int mid, int low, int high)
{
    if(low>=high)
        return -1;
    else
    {
        mid = (low+high)/2;
        if(key == arr[mid])
            return mid;
        else if(key>arr[mid])
            return rec_bin_srch(arr, key, mid, mid+1, high);
        else
            return rec_bin_srch(arr, key, mid, low, mid-1);
    }
    
    return -99;
}


int main()
{
    int n, key, mid, low, high;
    
    cout<<"\nEnter array size: ";
    cin>>n;
    
    cout<<"\nEnter key: ";
    cin>>key;
    
    int arr[n];
    
    cout<<"\nEnter array elements in ascending order: \n";
    
    for(int i=0;i<n; i++)
        cin>>arr[i];
    
    low = 0;
    high = n-1;
    mid = (low+high)/2;
    
    int res_itr = itr_bin_srch(arr, key, mid, low, high);
    
    if(res_itr>-1)
        cout<<"\n\n***Element "<<key<<" found at "<<res_itr<<" index.***";
    else
        cout<<"\n\nElement is not in the array";
    
    int res_rec = rec_bin_srch(arr, key, mid, low, high);
    
    if(res_rec>-1)
        cout<<"\n\n***Element "<<key<<" found at "<<res_rec<<" index.***";
    else
        cout<<"\n\nElement is not in the array";
    
    return 0;
    
}
